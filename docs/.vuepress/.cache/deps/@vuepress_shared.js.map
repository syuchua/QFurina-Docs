{
  "version": 3,
  "sources": ["../../../../node_modules/@vuepress/shared/dist/index.js"],
  "sourcesContent": ["// src/utils/links/isLinkWithProtocol.ts\r\nvar isLinkWithProtocol = (link) => /^[a-z][a-z0-9+.-]*:/.test(link) || link.startsWith(\"//\");\r\n\r\n// src/utils/links/isLinkExternal.ts\r\nvar markdownLinkRegexp = /.md((\\?|#).*)?$/;\r\nvar isLinkExternal = (link, base = \"/\") => isLinkWithProtocol(link) || // absolute link that does not start with `base` and does not end with `.md`\r\nlink.startsWith(\"/\") && !link.startsWith(base) && !markdownLinkRegexp.test(link);\r\n\r\n// src/utils/links/isLinkHttp.ts\r\nvar isLinkHttp = (link) => /^(https?:)?\\/\\//.test(link);\r\n\r\n// src/utils/routes/inferRoutePath.ts\r\nvar inferRoutePath = (path) => {\r\n  if (!path || path.endsWith(\"/\")) return path;\r\n  let routePath = path.replace(/(^|\\/)README.md$/i, \"$1index.html\");\r\n  if (routePath.endsWith(\".md\")) {\r\n    routePath = routePath.substring(0, routePath.length - 3) + \".html\";\r\n  } else if (!routePath.endsWith(\".html\")) {\r\n    routePath = routePath + \".html\";\r\n  }\r\n  if (routePath.endsWith(\"/index.html\")) {\r\n    routePath = routePath.substring(0, routePath.length - 10);\r\n  }\r\n  return routePath;\r\n};\r\n\r\n// src/utils/routes/normalizeRoutePath.ts\r\nvar FAKE_HOST = \"http://.\";\r\nvar normalizeRoutePath = (pathname, current) => {\r\n  if (!pathname.startsWith(\"/\") && current) {\r\n    const loc = current.slice(0, current.lastIndexOf(\"/\"));\r\n    return inferRoutePath(new URL(`${loc}/${pathname}`, FAKE_HOST).pathname);\r\n  }\r\n  return inferRoutePath(pathname);\r\n};\r\n\r\n// src/utils/routes/resolveLocalePath.ts\r\nvar resolveLocalePath = (locales, routePath) => {\r\n  const localePaths = Object.keys(locales).sort((a, b) => {\r\n    const levelDelta = b.split(\"/\").length - a.split(\"/\").length;\r\n    if (levelDelta !== 0) {\r\n      return levelDelta;\r\n    }\r\n    return b.length - a.length;\r\n  });\r\n  for (const localePath of localePaths) {\r\n    if (routePath.startsWith(localePath)) {\r\n      return localePath;\r\n    }\r\n  }\r\n  return \"/\";\r\n};\r\n\r\n// src/utils/routes/resolveRoutePathFromUrl.ts\r\nvar resolveRoutePathFromUrl = (url, base = \"/\") => {\r\n  const pathname = url.replace(/^(?:https?:)?\\/\\/[^/]*/, \"\");\r\n  return pathname.startsWith(base) ? `/${pathname.slice(base.length)}` : pathname;\r\n};\r\n\r\n// src/utils/routes/splitPath.ts\r\nvar SPLIT_CHAR_REGEXP = /(#|\\?)/;\r\nvar splitPath = (path) => {\r\n  const [pathname, ...hashAndQueries] = path.split(SPLIT_CHAR_REGEXP);\r\n  return {\r\n    pathname,\r\n    hashAndQueries: hashAndQueries.join(\"\")\r\n  };\r\n};\r\n\r\n// src/utils/resolveHeadIdentifier.ts\r\nvar TAGS_ALLOWED = [\"link\", \"meta\", \"script\", \"style\", \"noscript\", \"template\"];\r\nvar TAGS_UNIQUE = [\"title\", \"base\"];\r\nvar resolveHeadIdentifier = ([tag, attrs, content]) => {\r\n  if (TAGS_UNIQUE.includes(tag)) {\r\n    return tag;\r\n  }\r\n  if (!TAGS_ALLOWED.includes(tag)) {\r\n    return null;\r\n  }\r\n  if (tag === \"meta\" && attrs.name) {\r\n    return `${tag}.${attrs.name}`;\r\n  }\r\n  if (tag === \"template\" && attrs.id) {\r\n    return `${tag}.${attrs.id}`;\r\n  }\r\n  return JSON.stringify([\r\n    tag,\r\n    Object.entries(attrs).map(([key, value]) => {\r\n      if (typeof value === \"boolean\") {\r\n        return value ? [key, \"\"] : null;\r\n      }\r\n      return [key, value];\r\n    }).filter((item) => item != null).sort(([keyA], [keyB]) => keyA.localeCompare(keyB)),\r\n    content\r\n  ]);\r\n};\r\n\r\n// src/utils/dedupeHead.ts\r\nvar dedupeHead = (head) => {\r\n  const identifierSet = /* @__PURE__ */ new Set();\r\n  const result = [];\r\n  head.forEach((item) => {\r\n    const identifier = resolveHeadIdentifier(item);\r\n    if (identifier && !identifierSet.has(identifier)) {\r\n      identifierSet.add(identifier);\r\n      result.push(item);\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\n// src/utils/ensureLeadingSlash.ts\r\nvar ensureLeadingSlash = (str) => str[0] === \"/\" ? str : `/${str}`;\r\n\r\n// src/utils/ensureEndingSlash.ts\r\nvar ensureEndingSlash = (str) => str[str.length - 1] === \"/\" || str.endsWith(\".html\") ? str : `${str}/`;\r\n\r\n// src/utils/formatDateString.ts\r\nvar formatDateString = (str, defaultDateString = \"\") => {\r\n  const dateMatch = str.match(/\\b(\\d{4})-(\\d{1,2})-(\\d{1,2})\\b/);\r\n  if (dateMatch === null) {\r\n    return defaultDateString;\r\n  }\r\n  const [, yearStr, monthStr, dayStr] = dateMatch;\r\n  return [yearStr, monthStr.padStart(2, \"0\"), dayStr.padStart(2, \"0\")].join(\"-\");\r\n};\r\n\r\n// src/utils/omit.ts\r\nvar omit = (obj, ...keys) => {\r\n  const result = { ...obj };\r\n  for (const key of keys) {\r\n    delete result[key];\r\n  }\r\n  return result;\r\n};\r\n\r\n// src/utils/removeEndingSlash.ts\r\nvar removeEndingSlash = (str) => str[str.length - 1] === \"/\" ? str.slice(0, -1) : str;\r\n\r\n// src/utils/removeLeadingSlash.ts\r\nvar removeLeadingSlash = (str) => str[0] === \"/\" ? str.slice(1) : str;\r\n\r\n// src/utils/typeGuards.ts\r\nvar isFunction = (val) => typeof val === \"function\";\r\nvar isPlainObject = (val) => Object.prototype.toString.call(val) === \"[object Object]\";\r\nvar isString = (val) => typeof val === \"string\";\r\nexport {\r\n  dedupeHead,\r\n  ensureEndingSlash,\r\n  ensureLeadingSlash,\r\n  formatDateString,\r\n  inferRoutePath,\r\n  isFunction,\r\n  isLinkExternal,\r\n  isLinkHttp,\r\n  isLinkWithProtocol,\r\n  isPlainObject,\r\n  isString,\r\n  normalizeRoutePath,\r\n  omit,\r\n  removeEndingSlash,\r\n  removeLeadingSlash,\r\n  resolveHeadIdentifier,\r\n  resolveLocalePath,\r\n  resolveRoutePathFromUrl,\r\n  splitPath\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
